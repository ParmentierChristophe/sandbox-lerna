name: ðŸš§ Test Build Changed Packages

on:
  push:
    branches:
      - "main"
  pull_request:
    branches:
      - "main"
  workflow_dispatch:

jobs:
  test-build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "20.10.0"
          cache: "npm"

      - name: Install Lerna and Dependencies
        run: |
          npm install --global lerna
          yarn install

      - name: Find modified packages
        id: lerna_changed
        run: |
          npx lerna list --since origin/main --loglevel=silent --json > changed.json || echo "[]" > changed.json
          if [ -s changed.json ] && [ $(jq length changed.json) -gt 0 ]; then
            jq -r '.[].name' changed.json > modified-packages.txt
          else
            echo "No modified packages" > modified-packages.txt
          fi

      - name: Display modified packages
        run: |
          cat modified-packages.txt || echo "modified-packages.txt file not found"

      - name: Build modified packages
        if: success()
        run: |
          if [ -s modified-packages.txt ] && grep -q '[^[:space:]]' modified-packages.txt && [ "$(cat modified-packages.txt)" != "No modified packages" ]; then
            while IFS= read -r package; do
              echo "Building package: $package"
              npx lerna run build --scope "$package" --stream --no-bail
            done < modified-packages.txt
          else
            echo "No modified packages to build."
          fi

      - name: Validate modified packages
        if: success()
        run: |
          if [ -s modified-packages.txt ] && grep -q '[^[:space:]]' modified-packages.txt && [ "$(cat modified-packages.txt)" != "No modified packages" ]; then
            while IFS= read -r package; do
              echo "Validating package: $package"
              npx lerna run validate --scope "$package" --stream --no-bail
            done < modified-packages.txt
          else
            echo "No modified packages to validate."
          fi
